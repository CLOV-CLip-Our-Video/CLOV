.container {
  position: relative;
  width: 100%;
  max-width: min(640px, calc(100vw - 2rem));
  aspect-ratio: 4/3;
  margin: 0 auto;
  border-radius: var(--border-radius-large);
  overflow: hidden;
  background-color: transparent;
  box-shadow: var(--shadow-card);
  border: 2px solid var(--border-color-default);
  box-sizing: border-box;
  contain: layout style paint;
}

.cardDescription {
  font-size: 14px;
  color: var(--color-text-secondary);
  margin: 0 0 16px 0;
  line-height: 1.4;
}

.previewNote {
  background: var(--color-primary-opacity-10);
  border-radius: var(--border-radius-medium);
  padding: 16px;
  border-left: 4px solid var(--color-primary-darker);
  margin-top: 16px;
}

.noteText {
  font-size: 14px;
  color: var(--color-primary-darker);
  margin: 0 0 8px 0;
  font-weight: 500;
}

.noteSubtext {
  font-size: 12px;
  color: var(--color-text-secondary);
  margin: 0;
  line-height: 1.5;
}

/* 비디오 요소 (숨김) */
.hiddenVideo {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0;
  pointer-events: none;
  z-index: -1;
}

/* 메인 캔버스 */
.mainCanvas {
  width: 100%;
  height: 100%;
  object-fit: contain;
  display: block;
  transition: all 0.2s ease;
  background-color: transparent;
}

.visible {
  opacity: 1;
}

.hidden {
  opacity: 0;
}

/* 로딩 상태 */
.loadingState {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--color-card-background);
  color: var(--color-text);
  text-align: center;
  padding: 2rem;
}

.loadingSpinner {
  width: 3rem;
  height: 3rem;
  border: 3px solid var(--color-primary-opacity-20);
  border-top: 3px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1.5rem;
}

.loadingTitle {
  margin: 0 0 0.5rem 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--color-text);
}

.loadingText {
  margin: 0 0 1.5rem 0;
  font-size: 0.9rem;
  color: var(--color-text-secondary);
  line-height: 1.5;
}

/* 진행률 표시 */
.progressContainer {
  width: 100%;
  max-width: 200px;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.progressBar {
  flex: 1;
  height: 6px;
  background-color: var(--color-background);
  border-radius: 3px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  background-color: var(--color-primary);
  border-radius: 3px;
  transition: width 0.3s ease;
}

.progressText {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--color-primary);
  min-width: 2.5rem;
}

/* 에러 상태 */
.errorState {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--color-card-background);
  color: var(--color-text);
  text-align: center;
  padding: 2rem;
}

.errorIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.errorTitle {
  margin: 0 0 1rem 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--color-error);
}

.errorText {
  margin: 0 0 1.5rem 0;
  font-size: 0.9rem;
  color: var(--color-text-secondary);
  line-height: 1.5;
}

.retryButton {
  margin-top: 0.5rem;
}

/* 카메라 꺼짐 상태 */
.cameraOffState {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--color-background);
  color: var(--color-text);
  text-align: center;
  padding: 2rem;
}

.cameraOffIcon {
  font-size: 4rem;
  margin-bottom: 1rem;
  opacity: 0.7;
}

.cameraOffTitle {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--color-text);
}

.cameraOffText {
  margin: 0 0 1.5rem 0;
  font-size: 0.9rem;
  color: var(--color-text-secondary);
}

.turnOnButton {
  margin-top: 0.5rem;
}

/* 오버레이 정보 */
.overlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 10;
}

/* 모드 표시 */
.modeIndicator {
  position: absolute;
  top: 0.75rem;
  left: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: var(--border-radius-medium);
  font-size: 0.8rem;
  font-weight: 500;
}

.modeIcon {
  font-size: 1rem;
}

.modeText {
  white-space: nowrap;
}

/* 필터 표시 */
.filterIndicator {
  position: absolute;
  top: 0.75rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background-color: rgba(255, 217, 102, 0.9);
  color: var(--color-text);
  border-radius: var(--border-radius-medium);
  font-size: 0.8rem;
  font-weight: 500;
  border: 1px solid var(--color-primary-darker);
}

.filterIcon {
  font-size: 1rem;
}

.filterText {
  white-space: nowrap;
}

/* 투명도 표시 */
.opacityIndicator {
  position: absolute;
  top: 3rem;
  left: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background-color: rgba(139, 69, 19, 0.9);
  color: white;
  border-radius: var(--border-radius-medium);
  font-size: 0.8rem;
  font-weight: 500;
  animation: fadeIn 0.3s ease-out;
}

/* AI 처리 상태 */
.aiIndicator {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background-color: rgba(34, 197, 94, 0.9);
  color: white;
  border-radius: var(--border-radius-medium);
  font-size: 0.8rem;
  font-weight: 500;
}

.aiDot {
  width: 6px;
  height: 6px;
  background-color: white;
  border-radius: 50%;
  animation: pulse 2s infinite;
}

.aiText {
  white-space: nowrap;
}

/* 상태 표시 */
.statusIndicators {
  position: absolute;
  bottom: 0.75rem;
  right: 0.75rem;
  display: flex;
  gap: 0.5rem;
}

.statusInfo {
  display: flex;
  gap: 0.5rem;
  font-size: 0.7rem;
  color: white;
  background: rgba(0, 0, 0, 0.7);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius-small);
  margin-top: 0.5rem;
}

.statusInfo span {
  white-space: nowrap;
}

.indicator {
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: var(--border-radius-medium);
  font-size: 0.9rem;
}

.indicator.active {
  background-color: rgba(34, 197, 94, 0.9);
}

.indicator.muted {
  background-color: rgba(239, 68, 68, 0.9);
}

/* 하단 컨트롤 */
.controls {
  position: absolute;
  bottom: 0.75rem;
  left: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  pointer-events: auto;
  flex-direction: column;
  align-items: flex-start;
}

.controlButton {
  font-size: 0.8rem;
  padding: 0.5rem 0.75rem;
}

/* 디버그 정보 */
.debugInfo {
  display: flex;
  gap: 0.5rem;
  font-size: 0.7rem;
  color: white;
  background: rgba(0, 0, 0, 0.7);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius-small);
}

.debugInfo span {
  white-space: nowrap;
}

/* 이펙트 요약 정보 */
.effectsSummary {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.summaryItem {
  padding: 0.375rem 0.5rem;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: var(--border-radius-small);
  font-size: 0.75rem;
  font-weight: 500;
  white-space: nowrap;
}

/* 애니메이션 */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* 페이드 인 애니메이션 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modeIndicator,
.filterIndicator,
.aiIndicator {
  animation: fadeIn 0.3s ease-out;
}

/* 반응형 디자인 */
@media (max-width: 768px) {
  .container {
    max-width: calc(100vw - 1rem);
    aspect-ratio: 4/3;
    min-height: 280px;
  }

  .mainCanvas {
    object-fit: contain;
    object-position: center;
  }

  .loadingState,
  .errorState,
  .cameraOffState {
    padding: 1.5rem;
  }

  .loadingTitle,
  .errorTitle,
  .cameraOffTitle {
    font-size: 1rem;
  }

  .loadingText,
  .errorText,
  .cameraOffText {
    font-size: 0.85rem;
  }

  .modeIndicator,
  .filterIndicator,
  .aiIndicator {
    top: 0.5rem;
    font-size: 0.75rem;
    padding: 0.375rem 0.5rem;
  }

  .modeIndicator {
    left: 0.5rem;
  }

  .filterIndicator {
    left: 50%;
    transform: translateX(-50%);
  }

  .aiIndicator {
    right: 0.5rem;
  }

  .statusIndicators {
    bottom: 0.5rem;
    right: 0.5rem;
    gap: 0.375rem;
  }

  .indicator {
    width: 1.75rem;
    height: 1.75rem;
    font-size: 0.8rem;
  }

  .controls {
    bottom: 0.5rem;
    left: 0.5rem;
    gap: 0.5rem;
    flex-direction: column;
    align-items: flex-start;
  }

  .controlButton {
    font-size: 0.75rem;
    padding: 0.375rem 0.5rem;
  }

  .effectsSummary {
    gap: 0.375rem;
  }

  .summaryItem {
    font-size: 0.7rem;
    padding: 0.25rem 0.375rem;
  }
}

@media (max-width: 480px) {
  .container {
    border-radius: var(--border-radius-medium);
    aspect-ratio: 4/3;
    min-height: 240px;
    max-width: calc(100vw - 0.5rem);
  }

  .mainCanvas {
    object-fit: contain;
    object-position: center;
  }

  .modeIndicator,
  .filterIndicator {
    position: static;
    margin: 0.5rem 0.5rem 0 0.5rem;
  }

  .filterIndicator {
    transform: none;
    left: auto;
  }

  .controls {
    position: static;
    margin: 0.5rem;
    flex-direction: row;
    justify-content: space-between;
  }

  .statusIndicators {
    position: static;
    margin: 0.5rem;
  }
}

/* 고대비 모드 지원 */
@media (prefers-contrast: high) {
  .modeIndicator,
  .filterIndicator,
  .aiIndicator,
  .indicator,
  .summaryItem {
    border: 2px solid white;
  }

  .container {
    border-width: 3px;
  }
}

/* 다크 모드 대응 */
@media (prefers-color-scheme: dark) {
  .loadingState,
  .errorState,
  .cameraOffState {
    background-color: var(--color-background);
  }

  .filterIndicator {
    background-color: rgba(255, 217, 102, 0.95);
    color: var(--color-text);
  }
}
