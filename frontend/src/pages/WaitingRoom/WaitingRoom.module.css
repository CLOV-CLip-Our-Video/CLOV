.container {
  height: 100vh;
  background-color: var(--color-background);
  padding: 1rem;
  padding-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
  max-width: 100vw;
  overflow: hidden;
  box-sizing: border-box;
}

/* 상단 네비게이션 */
.topNav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem 0;
  width: 100%;
}

.backButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: var(--color-card-background);
  border: 1px solid var(--border-color-default);
  border-radius: var(--border-radius-medium);
  color: var(--color-text);
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: var(--shadow-card);
}

.backButton:hover {
  background-color: var(--color-primary-opacity-10);
  border-color: var(--color-primary-opacity-30);
  transform: translateY(-1px);
  box-shadow: var(--shadow-hover);
}

.backButton:active {
  transform: translateY(0);
}

.roomCodeDisplay {
  padding: 0.5rem 1rem;
  background-color: var(--color-primary-opacity-10);
  color: var(--color-primary-darker);
  border-radius: var(--border-radius-medium);
  font-weight: 600;
  font-size: 0.9rem;
  border: 1px solid var(--color-primary-opacity-30);
  box-shadow: var(--shadow-card);
}

/* 메인 콘텐츠 - 2컬럼 레이아웃 (비디오 + 컴팩트 패널) */
.content {
  display: flex;
  gap: 1.5rem;
  flex: 1;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
  min-height: 0;
}

/* 왼쪽: 비디오 프리뷰 영역 */
.videoSection {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 0;
  padding: 0 1rem;
  overflow: hidden;
}

.cameraPreview {
  width: 100%;
  max-width: 720px;
  border-radius: var(--border-radius-large);
  overflow: hidden;
  box-shadow: var(--shadow-card);
}

/* 오른쪽: 컴팩트 설정 패널 (RecordingRoom 스타일) */
.settingsPanel {
  width: 380px;
  flex-shrink: 0;
  padding: 1.25rem;
  background-color: var(--color-card-background);
  border-left: 1px solid var(--border-color-default);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  height: 100%;
  overflow-y: auto;
  min-height: 0;
}

/* 카드 공통 스타일 */
.cardDescription {
  font-size: 14px;
  color: var(--color-text-secondary);
  margin: 0 0 16px 0;
  line-height: 1.4;
}

.previewNote {
  background: var(--color-primary-opacity-10);
  border-radius: var(--border-radius-medium);
  padding: 16px;
  border-left: 4px solid var(--color-primary-darker);
  margin-top: 16px;
}

.noteText {
  font-size: 14px;
  color: var(--color-primary-darker);
  margin: 0 0 8px 0;
  font-weight: 500;
}

.noteSubtext {
  font-size: 12px;
  color: var(--color-text-secondary);
  margin: 0;
  line-height: 1.5;
}

.userCard,
.settingCard,
.readyCard {
  padding: 0.875rem;
  background-color: var(--color-card-background);
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-card);
  border: 1px solid var(--border-color-default);
  transition: all 0.2s ease;
}

.userCard:hover,
.settingCard:hover,
.readyCard:hover {
  box-shadow: var(--shadow-hover);
  transform: translateY(-1px);
}

.cardHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 0.75rem;
}

.cardTitle {
  margin: 0;
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--color-text);
}

.editButton {
  flex-shrink: 0;
}

/* 사용자 정보 */
.userInfo {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.userAvatar {
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-primary-opacity-10);
  border-radius: var(--border-radius-full);
  font-size: 1.25rem;
  border: 2px solid var(--color-primary-opacity-30);
}

.userDetails {
  flex: 1;
}

.userName {
  margin: 0 0 0.125rem 0;
  font-size: 1rem;
  font-weight: 600;
  color: var(--color-text);
}

.userStatus {
  margin: 0;
  font-size: 0.85rem;
  color: var(--color-text-secondary);
}

/* 세그멘테이션 모드 */
.segmentationModes {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
}

.modeButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background-color: var(--color-background);
  border: 1px solid var(--border-color-default);
  border-radius: var(--border-radius-small);
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: left;
}

.modeButton:hover {
  border-color: var(--color-primary-opacity-50);
  background-color: var(--color-primary-opacity-10);
}

.modeButton.active {
  border-color: var(--color-primary-darker);
  background-color: var(--color-primary-opacity-20);
}

.modeIcon {
  font-size: 1.25rem;
  flex-shrink: 0;
}

.modeInfo {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.modeName {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--color-text);
}

.modeDesc {
  font-size: 0.7rem;
  color: var(--color-text-secondary);
}

/* 필터 그리드 */
.filtersGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.375rem;
  margin-bottom: 0.375rem;
}

.filterButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
  padding: 0.5rem 0.25rem;
  background-color: var(--color-background);
  border: 1px solid var(--border-color-default);
  border-radius: var(--border-radius-small);
  cursor: pointer;
  transition: all 0.2s ease;
}

.filterButton:hover {
  border-color: var(--color-primary-opacity-50);
  background-color: var(--color-primary-opacity-10);
}

.filterButton.active {
  border-color: var(--color-primary-darker);
  background-color: var(--color-primary-opacity-20);
}

.filterIcon {
  font-size: 1.1rem;
}

.filterName {
  font-size: 0.65rem;
  font-weight: 500;
  color: var(--color-text);
  text-align: center;
  line-height: 1.2;
}

.moreFilters {
  text-align: center;
  padding: 0.5rem;
}

.moreText {
  font-size: 0.8rem;
  color: var(--color-text-secondary);
  font-style: italic;
}

/* 슬라이더 섹션 */
.sliderSection {
  margin-bottom: 0.75rem;
}

.sliderSection:last-child {
  margin-bottom: 0;
}

.sliderHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.375rem;
}

.sliderLabel {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--color-text);
}

.sliderValue {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--color-primary-darker);
}

.slider {
  margin-bottom: 0.5rem;
}

.sliderPresets {
  display: flex;
  gap: 0.375rem;
}

.preset {
  flex: 1;
  padding: 0.375rem 0.5rem;
  background-color: var(--color-background);
  border: 1px solid var(--border-color-default);
  border-radius: var(--border-radius-small);
  font-size: 0.7rem;
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.preset:hover {
  border-color: var(--color-primary);
  color: var(--color-text);
}

.preset.active {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
  color: white;
}

/* 준비 상태 */
.checkList {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.checkItem {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background-color: var(--color-background);
  border-radius: var(--border-radius-small);
  border: 1px solid var(--border-color-default);
  transition: all 0.2s ease;
}

.checkItem.checked {
  background-color: rgba(34, 197, 94, 0.05);
  border-color: rgba(34, 197, 94, 0.3);
}

.checkIcon {
  font-size: 1.1rem;
  flex-shrink: 0;
}

.checkText {
  font-size: 0.8rem;
  color: var(--color-text);
  font-weight: 500;
}

/* 입장 버튼 */
.enterButton {
  padding: 0.75rem 1.25rem;
  font-size: 0.9rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.375rem;
  transition: all 0.3s ease;
  margin-top: 0.375rem;
}

.enterButton:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.loadingSpinner {
  width: 1rem;
  height: 1rem;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.helpText {
  margin: 0.75rem 0 0 0;
  font-size: 0.85rem;
  color: var(--color-success);
  text-align: center;
  line-height: 1.4;
  padding: 0.75rem;
  background-color: rgba(34, 197, 94, 0.05);
  border-radius: var(--border-radius-medium);
  border: 1px solid rgba(34, 197, 94, 0.2);
}

/* 닉네임 모달 */
.nicknameModal {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1rem;
  max-width: 400px;
  margin: 0 auto;
}

.nicknameDescription {
  text-align: center;
}

.descText {
  font-size: 1rem;
  font-weight: 500;
  color: var(--color-text);
  margin: 0 0 0.5rem 0;
  line-height: 1.4;
}

.descSubtext {
  font-size: 0.85rem;
  color: var(--color-text-secondary);
  margin: 0;
  line-height: 1.3;
}

/* 닉네임 입력 */
.inputContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.nicknameInput {
  width: 100%;
  padding: 0.75rem 1rem;
  padding-right: 4rem;
  font-size: 1rem;
  border: 2px solid var(--color-input-border);
  border-radius: var(--border-radius-medium);
  background: var(--color-input-background);
  color: var(--color-input-text);
  transition: all 0.2s ease;
  outline: none;
}

.nicknameInput::placeholder {
  color: var(--color-input-placeholder);
}

.nicknameInput:focus {
  border-color: var(--color-input-border-focus);
  box-shadow: 0 0 0 3px var(--color-primary-opacity-20);
}

.nicknameInput.error {
  border-color: var(--color-error);
  background: rgba(244, 67, 54, 0.05);
}

.charCount {
  position: absolute;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  font-size: 0.8rem;
  font-weight: 500;
  color: var(--color-text-secondary);
  pointer-events: none;
}

.overLimit {
  color: var(--color-error) !important;
  font-weight: 600;
}

.maxLength {
  color: var(--color-text-light);
}

/* 메시지 */
.errorMessage,
.successMessage {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.85rem;
  font-weight: 500;
  padding: 0.75rem;
  border-radius: var(--border-radius-small);
}

.errorMessage {
  color: var(--color-error);
  background: rgba(244, 67, 54, 0.1);
  border: 1px solid rgba(244, 67, 54, 0.2);
}

.successMessage {
  color: var(--color-success);
  background: rgba(76, 175, 80, 0.1);
  border: 1px solid rgba(76, 175, 80, 0.2);
}

.errorIcon,
.successIcon {
  font-size: 1rem;
  flex-shrink: 0;
}

/* 닉네임 추천 */
.suggestions {
  background: var(--color-background-opacity-50);
  border-radius: var(--border-radius-medium);
  padding: 1rem;
  border: 1px solid var(--border-color-default);
}

.suggestionsHeader {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.suggestionsTitle {
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--color-text);
  margin: 0;
}

.refreshButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.75rem;
  height: 1.75rem;
  background: var(--color-primary-opacity-10);
  border: 1px solid var(--color-primary-opacity-30);
  border-radius: var(--border-radius-full);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.8rem;
  padding: 0;
}

.refreshButton:hover {
  background: var(--color-primary-opacity-20);
  border-color: var(--color-primary);
  transform: scale(1.05);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.refreshButton:active {
  transform: scale(0.95);
}

.suggestionTags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
}

.suggestionTag {
  padding: 0.5rem 0.75rem;
  background: var(--color-primary-opacity-10);
  border: 1px solid var(--color-primary-opacity-30);
  border-radius: var(--border-radius-full);
  color: var(--color-primary-darker);
  font-size: 0.8rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.suggestionTag:hover {
  background: var(--color-primary-opacity-20);
  border-color: var(--color-primary);
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.suggestionTag:active {
  transform: translateY(0);
}

/* 모달 버튼 */
.modalButtons {
  display: flex;
  gap: 0.75rem;
  margin-top: 0.5rem;
}

.cancelButton {
  flex: 0 0 auto;
  min-width: 80px;
}

.submitButton {
  flex: 1;
  min-width: 120px;
}

.submitButton:disabled {
  background: var(--color-button-disabled);
  color: var(--color-button-disabled-text);
  border-color: var(--color-button-disabled);
  cursor: not-allowed;
}

/* 반응형 디자인 */
@media (max-width: 1200px) {
  .settingsPanel {
    width: 340px;
  }
}

@media (max-width: 1024px) {
  .container {
    height: auto;
    min-height: 100vh;
  }
  
  .content {
    flex-direction: column;
    gap: 1rem;
    overflow: visible;
  }
  
  .videoSection {
    order: 1;
    min-height: 400px;
    padding: 0;
    overflow: visible;
  }
  
  .settingsPanel {
    order: 2;
    width: 100%;
    height: auto;
    min-height: auto;
    border-left: none;
    border-top: 1px solid var(--border-color-default);
    overflow-y: visible;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 0.5rem;
    padding-top: 1rem;
    gap: 1rem;
  }
  
  .topNav {
    padding: 0.5rem 0;
    gap: 0.5rem;
  }
  
  .backButton {
    padding: 0.5rem 0.75rem;
    font-size: 0.85rem;
  }
  
  .roomCodeDisplay {
    padding: 0.5rem 0.75rem;
    font-size: 0.85rem;
  }
  
  .content {
    gap: 1rem;
  }
  
  .settingsPanel {
    gap: 0.75rem;
    padding: 1rem;
  }
  
  .videoSection {
    min-height: 300px;
  }
  
  .userCard,
  .settingCard,
  .readyCard {
    padding: 1rem;
  }
  
  .filtersGrid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .segmentationModes {
    gap: 0.375rem;
  }
  
  .modeButton {
    padding: 0.5rem;
  }
  
  .modeIcon {
    font-size: 1.25rem;
  }
  
  .filterButton {
    padding: 0.5rem;
  }
  
  .filterIcon {
    font-size: 1.25rem;
  }
  
  .filterName {
    font-size: 0.7rem;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 0.25rem;
  }
  
  .topNav {
    padding: 0.25rem 0;
  }
  
  .backButton {
    padding: 0.4rem 0.6rem;
    font-size: 0.8rem;
  }
  
  .roomCodeDisplay {
    padding: 0.4rem 0.6rem;
    font-size: 0.8rem;
  }
  
  .videoSection {
    min-height: 250px;
  }
  
  .userCard,
  .settingCard,
  .readyCard {
    padding: 0.75rem;
  }
  
  .cardTitle {
    font-size: 0.9rem;
  }
  
  .filtersGrid {
    grid-template-columns: repeat(3, 1fr);
    gap: 0.375rem;
  }
  
  .filterButton {
    padding: 0.375rem;
  }
  
  .filterIcon {
    font-size: 1rem;
  }
  
  .filterName {
    font-size: 0.65rem;
  }
  
  .modeButton {
    flex-direction: row;
    padding: 0.5rem;
    gap: 0.5rem;
  }
  
  .modeIcon {
    font-size: 1rem;
  }
  
  .modeName {
    font-size: 0.8rem;
  }
  
  .modeDesc {
    font-size: 0.7rem;
  }
  
  .sliderPresets {
    gap: 0.375rem;
  }
  
  .preset {
    font-size: 0.75rem;
    padding: 0.375rem 0.5rem;
  }
  
  .checkItem {
    padding: 0.5rem;
    gap: 0.5rem;
  }
  
  .checkText {
    font-size: 0.8rem;
  }
  
  .enterButton {
    padding: 0.875rem 1.25rem;
    font-size: 0.9rem;
  }
  
  .nicknameModal {
    padding: 0.75rem;
  }
  
  .modalButtons {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .cancelButton,
  .submitButton {
    flex: 1;
    min-width: auto;
  }
}

/* 애니메이션 */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.container {
  animation: fadeInUp 0.5s ease;
}

.userCard,
.settingCard,
.readyCard {
  animation: fadeInUp 0.5s ease;
  animation-fill-mode: both;
}

.userCard { animation-delay: 0.1s; }
.settingCard:nth-child(2) { animation-delay: 0.2s; }
.settingCard:nth-child(3) { animation-delay: 0.3s; }
.settingCard:nth-child(4) { animation-delay: 0.4s; }
.readyCard { animation-delay: 0.5s; }

/* 호버 효과 */
.modeButton:hover,
.filterButton:hover,
.preset:hover {
  transform: translateY(-1px);
}

.modeButton:active,
.filterButton:active,
.preset:active {
  transform: translateY(0);
}

/* 포커스 접근성 */
.nicknameInput:focus,
.modeButton:focus,
.filterButton:focus,
.preset:focus,
.suggestionTag:focus,
.cancelButton:focus,
.submitButton:focus,
.enterButton:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* 고대비 모드 지원 */
@media (prefers-contrast: high) {
  .userCard,
  .settingCard,
  .readyCard {
    border-width: 2px;
  }
  
  .modeButton,
  .filterButton {
    border-width: 2px;
  }
  
  .modeButton.active,
  .filterButton.active {
    border-width: 3px;
  }
  
  .checkItem.checked {
    border-width: 2px;
  }
}
